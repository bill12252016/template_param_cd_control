global_arguments:
   region: us-west-2
   db_type: mysql
   sg_db_label: database
   sg_web_label: web
infrastructure:
   vpc:
       stack_name: aws_vpc_2tier
   dockerhost:
       stack_name: aws_ec2_dockerhost_dev
       arguments:
          size: t2.micro
          disksize: 50
   kubernetes:
       dependencies:
           - infrastructure::dockerhost
       stack_name: gary:::public::Cluster/Kubernetes/Ec2/VPC/main
       arguments:
          AddCreds: 
              - name: aws
                type: aws
              - name: docker
          domain: test600.elasticdeploy.com
          parent_domain: elasticdeploy.com
          kube_node_size: t2.micro
          master_node_size: t2.micro
#   mongodb:
#       stack_name: aws_ec2_mongodb
#       arguments:
#          dbs: 1
#          size: t2.nano
#   rds_mysql:
#       stack_name: aws_db_rds
#       arguments:
#          flavor: "db.t2.micro"
#          size: 5
#          engine: "MySQL"
#          az: False
#build:
#   flask_sample_1:
#       stack_name: build_dev
#       repo_url: https://github.com/bill12252016/flask_sample
#       repo_branch: dev1
#       triggered_branches:
#                 - dev1
#       arguments:
#          DOCKER_FILE_BUILD: configs/build/Dockerfile
#          DockerProvider: docker.io
#          DockerUsername: bill12252016
#          DockerRepoType: public
#          DockerRepoName: meteror-todos
#       results:
#           - name: deploy_1
#       rename:
#           EnvVars:
#             DOCKER_IMAGE: DOCKER_IMAGE_FLASK
#   triggers:
#       - name: flask_sample_dev1
#         type: trigger
#         path: deploy::flask_dev1
#         channels:
#             - deploy_1
#deploy:
#    flask_dev1:
#       stack_name: deploy_dev
#       arguments:
#           EnvVars:
#               MYSQL_DB_NAME: flask
#               MYSQL_DB_USER: sample
#               MYSQL_DB_PASSWORD: admin123
#           PRE_SCRIPTS:
#              - install_mysql.sh
#              - createdb.sh
#              - create_schema.sh
#           DOCKER_TEMPLATE_FILES:
#              - template_dir: configs/deploy
